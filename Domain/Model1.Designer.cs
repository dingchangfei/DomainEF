//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Model1", "NoteInfoUserInfo", "NoteInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Domain.NoteInfo), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Domain.UserInfo), true)]

#endregion

namespace Domain
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Model1Container”部分中的连接字符串初始化新 Model1Container 对象。
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Model1Container 对象。
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Model1Container 对象。
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NoteInfo> NoteInfo
        {
            get
            {
                if ((_NoteInfo == null))
                {
                    _NoteInfo = base.CreateObjectSet<NoteInfo>("NoteInfo");
                }
                return _NoteInfo;
            }
        }
        private ObjectSet<NoteInfo> _NoteInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfo
        {
            get
            {
                if ((_UserInfo == null))
                {
                    _UserInfo = base.CreateObjectSet<UserInfo>("UserInfo");
                }
                return _UserInfo;
            }
        }
        private ObjectSet<UserInfo> _UserInfo;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 NoteInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNoteInfo(NoteInfo noteInfo)
        {
            base.AddObject("NoteInfo", noteInfo);
        }
    
        /// <summary>
        /// 用于向 UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfo(UserInfo userInfo)
        {
            base.AddObject("UserInfo", userInfo);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="NoteInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoteInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NoteInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="content">Content 属性的初始值。</param>
        /// <param name="userInfoID">UserInfoID 属性的初始值。</param>
        public static NoteInfo CreateNoteInfo(global::System.Int32 id, global::System.String title, global::System.String content, global::System.Int32 userInfoID)
        {
            NoteInfo noteInfo = new NoteInfo();
            noteInfo.ID = id;
            noteInfo.Title = title;
            noteInfo.Content = content;
            noteInfo.UserInfoID = userInfoID;
            return noteInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserInfoID
        {
            get
            {
                return _UserInfoID;
            }
            set
            {
                OnUserInfoIDChanging(value);
                ReportPropertyChanging("UserInfoID");
                _UserInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserInfoID");
                OnUserInfoIDChanged();
            }
        }
        private global::System.Int32 _UserInfoID;
        partial void OnUserInfoIDChanging(global::System.Int32 value);
        partial void OnUserInfoIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "NoteInfoUserInfo", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("Model1.NoteInfoUserInfo", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("Model1.NoteInfoUserInfo", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("Model1.NoteInfoUserInfo", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("Model1.NoteInfoUserInfo", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.Int32 id, global::System.String userName)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.ID = id;
            userInfo.UserName = userName;
            return userInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "NoteInfoUserInfo", "NoteInfo")]
        public EntityCollection<NoteInfo> NoteInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NoteInfo>("Model1.NoteInfoUserInfo", "NoteInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NoteInfo>("Model1.NoteInfoUserInfo", "NoteInfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
